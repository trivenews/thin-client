{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/core-js/fn/object/assign.js",
    "node_modules/core-js/fn/object/values.js",
    "node_modules/core-js/modules/$.a-function.js",
    "node_modules/core-js/modules/$.cof.js",
    "node_modules/core-js/modules/$.core.js",
    "node_modules/core-js/modules/$.ctx.js",
    "node_modules/core-js/modules/$.defined.js",
    "node_modules/core-js/modules/$.descriptors.js",
    "node_modules/core-js/modules/$.export.js",
    "node_modules/core-js/modules/$.fails.js",
    "node_modules/core-js/modules/$.global.js",
    "node_modules/core-js/modules/$.hide.js",
    "node_modules/core-js/modules/$.iobject.js",
    "node_modules/core-js/modules/$.js",
    "node_modules/core-js/modules/$.object-assign.js",
    "node_modules/core-js/modules/$.object-to-array.js",
    "node_modules/core-js/modules/$.property-desc.js",
    "node_modules/core-js/modules/$.redefine.js",
    "node_modules/core-js/modules/$.to-iobject.js",
    "node_modules/core-js/modules/$.to-object.js",
    "node_modules/core-js/modules/$.uid.js",
    "node_modules/core-js/modules/es6.object.assign.js",
    "node_modules/core-js/modules/es7.object.values.js",
    "node_modules/is-equal-shallow/index.js",
    "node_modules/is-primitive/index.js",
    "node_modules/query-string/index.js",
    "node_modules/raven-js/src/configError.js",
    "node_modules/raven-js/src/raven.js",
    "node_modules/raven-js/src/singleton.js",
    "node_modules/raven-js/src/utils.js",
    "node_modules/raven-js/vendor/TraceKit/tracekit.js",
    "node_modules/strict-uri-encode/index.js",
    "node_modules/whatwg-fetch/fetch.js",
    "src/common/browser-action.js",
    "src/common/browser-name.js",
    "src/common/detect-content-type.js",
    "src/common/direct-link-query.js",
    "src/common/errors.js",
    "src/common/extension.js",
    "src/common/help-page.js",
    "src/common/hypothesis-chrome-extension.js",
    "src/common/install.js",
    "src/common/polyfills.js",
    "src/common/raven.js",
    "src/common/settings.js",
    "src/common/sidebar-injector.js",
    "src/common/tab-state.js",
    "src/common/tab-store.js",
    "src/common/uri-info.js",
    "src/common/util.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;;ACJA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACllkf;AACA,IAAI,WAAW,QAAQ,aAAR,CAAf;;AAEA;AACA,IAAI,SAAS,SAAS,MAAtB;;AAEA;AACA;AACA,IAAI,QAAQ,EAAZ;AACA,MAAM,OAAO,MAAb,IAAuB;AACrB,MAAI,gCADiB;AAErB,MAAI;AAFiB,CAAvB;AAIA,MAAM,OAAO,QAAb,IAAyB;AACvB,MAAI,kCADmB;AAEvB,MAAI;AAFmB,CAAzB;;AAKA,IAAI,YAAY,SAAS,SAAzB;;AAEA;AACA;AACA,IAAI,cAAc;AAChB,SAAO;AACL,iBAAa,KADR;AAEL,WAAO,SAFF,CAEa;AAFb,GADS;AAKhB,aAAW;AACT,iBAAa,KADJ;AAET,WAAO,SAFE,CAES;AAFT;AALK,CAAlB;;AAWA;AACA,SAAS,CAAT,CAAW,GAAX,EAAgB;AACd,SAAO,GAAP;AACD;;AAED;;;;;;;AAOA,SAAS,aAAT,CAAuB,mBAAvB,EAA4C;AAC1C;;;;;;AAMA,OAAK,MAAL,GAAc,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AACnC,QAAI,aAAa,MAAM,OAAO,QAAb,CAAjB;AACA,QAAI,QAAQ,EAAZ;AACA,QAAI,YAAY,EAA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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/$.core').Object.assign;",
    "require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/$.core').Object.values;",
    "module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};",
    "var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};",
    "var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef",
    "// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};",
    "// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};",
    "// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});",
    "var global    = require('./$.global')\n  , core      = require('./$.core')\n  , hide      = require('./$.hide')\n  , redefine  = require('./$.redefine')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})\n    , key, own, out, exp;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if(target && !own)redefine(target, key, out);\n    // export\n    if(exports[key] != out)hide(exports, key, exp);\n    if(IS_PROTO && expProto[key] != out)expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;",
    "module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};",
    "// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef",
    "var $          = require('./$')\n  , createDesc = require('./$.property-desc');\nmodule.exports = require('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};",
    "// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};",
    "var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};",
    "// 19.1.2.1 Object.assign(target, source, ...)\nvar $        = require('./$')\n  , toObject = require('./$.to-object')\n  , IObject  = require('./$.iobject');\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = require('./$.fails')(function(){\n  var a = Object.assign\n    , A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , $$    = arguments\n    , $$len = $$.length\n    , index = 1\n    , getKeys    = $.getKeys\n    , getSymbols = $.getSymbols\n    , isEnum     = $.isEnum;\n  while($$len > index){\n    var S      = IObject($$[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  }\n  return T;\n} : Object.assign;",
    "var $         = require('./$')\n  , toIObject = require('./$.to-iobject')\n  , isEnum    = $.isEnum;\nmodule.exports = function(isEntries){\n  return function(it){\n    var O      = toIObject(it)\n      , keys   = $.getKeys(O)\n      , length = keys.length\n      , i      = 0\n      , result = []\n      , key;\n    while(length > i)if(isEnum.call(O, key = keys[i++])){\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};",
    "module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};",
    "// add fake Function#toString\n// for correct work wrapped methods / constructors with methods like LoDash isNative\nvar global    = require('./$.global')\n  , hide      = require('./$.hide')\n  , SRC       = require('./$.uid')('src')\n  , TO_STRING = 'toString'\n  , $toString = Function[TO_STRING]\n  , TPL       = ('' + $toString).split(TO_STRING);\n\nrequire('./$.core').inspectSource = function(it){\n  return $toString.call(it);\n};\n\n(module.exports = function(O, key, val, safe){\n  if(typeof val == 'function'){\n    val.hasOwnProperty(SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n    val.hasOwnProperty('name') || hide(val, 'name', key);\n  }\n  if(O === global){\n    O[key] = val;\n  } else {\n    if(!safe)delete O[key];\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString(){\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});",
    "// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./$.iobject')\n  , defined = require('./$.defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};",
    "// 7.1.13 ToObject(argument)\nvar defined = require('./$.defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};",
    "var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};",
    "// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./$.export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./$.object-assign')});",
    "// http://goo.gl/XkBrjD\nvar $export = require('./$.export')\n  , $values = require('./$.object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it){\n    return $values(it);\n  }\n});",
    "/*!\n * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\n\nmodule.exports = function isEqual(a, b) {\n  if (!a && !b) { return true; }\n  if (!a && b || a && !b) { return false; }\n\n  var numKeysA = 0, numKeysB = 0, key;\n  for (key in b) {\n    numKeysB++;\n    if (!isPrimitive(b[key]) || !a.hasOwnProperty(key) || (a[key] !== b[key])) {\n      return false;\n    }\n  }\n  for (key in a) {\n    numKeysA++;\n  }\n  return numKeysA === numKeysB;\n};\n",
    "/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n// see http://jsperf.com/testing-value-is-primitive/7\nmodule.exports = function isPrimitive(value) {\n  return value == null || (typeof value !== 'function' && typeof value !== 'object');\n};\n",
    "'use strict';\nvar strictUriEncode = require('strict-uri-encode');\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str) {\n\tif (typeof str !== 'string') {\n\t\treturn {};\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn {};\n\t}\n\n\treturn str.split('&').reduce(function (ret, param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\tkey = decodeURIComponent(key);\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tif (!ret.hasOwnProperty(key)) {\n\t\t\tret[key] = val;\n\t\t} else if (Array.isArray(ret[key])) {\n\t\t\tret[key].push(val);\n\t\t} else {\n\t\t\tret[key] = [ret[key], val];\n\t\t}\n\n\t\treturn ret;\n\t}, {});\n};\n\nexports.stringify = function (obj) {\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn key;\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\treturn val.slice().sort().map(function (val2) {\n\t\t\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val2);\n\t\t\t}).join('&');\n\t\t}\n\n\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n",
    "'use strict';\n\nfunction RavenConfigError(message) {\n    this.name = 'RavenConfigError';\n    this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n",
    "/*global XDomainRequest:false*/\n'use strict';\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar RavenConfigError = require('./configError');\nvar utils = require('./utils');\n\nvar isFunction = utils.isFunction;\nvar isUndefined = utils.isUndefined;\nvar isError = utils.isError;\nvar isEmptyObject = utils.isEmptyObject;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n    dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n    return +new Date();\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n    this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n    // Raven can run in contexts where there's no document (react-native)\n    this._hasDocument = typeof document !== 'undefined';\n    this._lastCapturedException = null;\n    this._lastEventId = null;\n    this._globalServer = null;\n    this._globalKey = null;\n    this._globalProject = null;\n    this._globalContext = {};\n    this._globalOptions = {\n        logger: 'javascript',\n        ignoreErrors: [],\n        ignoreUrls: [],\n        whitelistUrls: [],\n        includePaths: [],\n        crossOrigin: 'anonymous',\n        collectWindowErrors: true,\n        maxMessageLength: 0,\n        stackTraceLimit: 50\n    };\n    this._ignoreOnError = 0;\n    this._isRavenInstalled = false;\n    this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n    // capture references to window.console *and* all its methods first\n    // before the console plugin has a chance to monkey patch\n    this._originalConsole = window.console || {};\n    this._originalConsoleMethods = {};\n    this._plugins = [];\n    this._startTime = now();\n    this._wrappedBuiltIns = [];\n\n    for (var method in this._originalConsole) {  // eslint-disable-line guard-for-in\n      this._originalConsoleMethods[method] = this._originalConsole[method];\n    }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n    // Hardcode version string so that raven source can be loaded directly via\n    // webpack (using a build step causes webpack #1617). Grunt verifies that\n    // this value matches package.json during build.\n    //   See: https://github.com/getsentry/raven-js/issues/465\n    VERSION: '2.3.0',\n\n    debug: false,\n\n    TraceKit: TraceKit, // alias to TraceKit\n\n    /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Optional set of of global options [optional]\n     * @return {Raven}\n     */\n    config: function(dsn, options) {\n        var self = this;\n\n        if (this._globalServer) {\n                this._logDebug('error', 'Error: Raven has already been configured');\n            return this;\n        }\n        if (!dsn) return this;\n\n        // merge in options\n        if (options) {\n            each(options, function(key, value){\n                // tags and extra are special and need to be put into context\n                if (key === 'tags' || key === 'extra') {\n                    self._globalContext[key] = value;\n                } else {\n                    self._globalOptions[key] = value;\n                }\n            });\n        }\n\n        var uri = this._parseDSN(dsn),\n            lastSlash = uri.path.lastIndexOf('/'),\n            path = uri.path.substr(1, lastSlash);\n\n        this._dsn = dsn;\n\n        // \"Script error.\" is hard coded into browsers for errors that it can't read.\n        // this is the result of a script being pulled in from an external domain and CORS.\n        this._globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n        this._globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n        // join regexp rules into one big rule\n        this._globalOptions.ignoreErrors = joinRegExp(this._globalOptions.ignoreErrors);\n        this._globalOptions.ignoreUrls = this._globalOptions.ignoreUrls.length ? joinRegExp(this._globalOptions.ignoreUrls) : false;\n        this._globalOptions.whitelistUrls = this._globalOptions.whitelistUrls.length ? joinRegExp(this._globalOptions.whitelistUrls) : false;\n        this._globalOptions.includePaths = joinRegExp(this._globalOptions.includePaths);\n\n        this._globalKey = uri.user;\n        this._globalSecret = uri.pass && uri.pass.substr(1);\n        this._globalProject = uri.path.substr(lastSlash + 1);\n\n        this._globalServer = this._getGlobalServer(uri);\n\n        this._globalEndpoint = this._globalServer +\n            '/' + path + 'api/' + this._globalProject + '/store/';\n\n        if (this._globalOptions.fetchContext) {\n            TraceKit.remoteFetching = true;\n        }\n\n        if (this._globalOptions.linesOfContext) {\n            TraceKit.linesOfContext = this._globalOptions.linesOfContext;\n        }\n\n        TraceKit.collectWindowErrors = !!this._globalOptions.collectWindowErrors;\n\n        // return for chaining\n        return this;\n    },\n\n    /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n    install: function() {\n        var self = this;\n        if (this.isSetup() && !this._isRavenInstalled) {\n            TraceKit.report.subscribe(function () {\n                self._handleOnErrorStackInfo.apply(self, arguments);\n            });\n            this._wrapBuiltIns();\n\n            // Install all of the plugins\n            this._drainPlugins();\n\n            this._isRavenInstalled = true;\n        }\n\n        Error.stackTraceLimit = this._globalOptions.stackTraceLimit;\n        return this;\n    },\n\n    /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n    context: function(options, func, args) {\n        if (isFunction(options)) {\n            args = func || [];\n            func = options;\n            options = undefined;\n        }\n\n        return this.wrap(options, func).apply(this, args);\n    },\n\n    /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @return {function} The newly wrapped functions with a context\n     */\n    wrap: function(options, func) {\n        var self = this;\n\n        // 1 argument has been passed, and it's not a function\n        // so just return it\n        if (isUndefined(func) && !isFunction(options)) {\n            return options;\n        }\n\n        // options is optional\n        if (isFunction(options)) {\n            func = options;\n            options = undefined;\n        }\n\n        // At this point, we've passed along 2 arguments, and the second one\n        // is not a function either, so we'll just return the second argument.\n        if (!isFunction(func)) {\n            return func;\n        }\n\n        // We don't wanna wrap it twice!\n        try {\n            if (func.__raven__) {\n                return func;\n            }\n        } catch (e) {\n            // Just accessing the __raven__ prop in some Selenium environments\n            // can cause a \"Permission denied\" exception (see raven-js#495).\n            // Bail on wrapping and return the function as-is (defers to window.onerror).\n            return func;\n        }\n\n        // If this has already been wrapped in the past, return that\n        if (func.__raven_wrapper__ ){\n            return func.__raven_wrapper__ ;\n        }\n\n        function wrapped() {\n            var args = [], i = arguments.length,\n                deep = !options || options && options.deep !== false;\n            // Recursively wrap all of a function's arguments that are\n            // functions themselves.\n\n            while(i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n            try {\n                return func.apply(this, args);\n            } catch(e) {\n                self._ignoreNextOnError();\n                self.captureException(e, options);\n                throw e;\n            }\n        }\n\n        // copy over properties of the old function\n        for (var property in func) {\n            if (hasKey(func, property)) {\n                wrapped[property] = func[property];\n            }\n        }\n        func.__raven_wrapper__ = wrapped;\n\n        wrapped.prototype = func.prototype;\n\n        // Signal that this function has been wrapped already\n        // for both debugging and to prevent it to being wrapped twice\n        wrapped.__raven__ = true;\n        wrapped.__inner__ = func;\n\n        return wrapped;\n    },\n\n    /*\n     * Uninstalls the global error handler.\n     *\n     * @return {Raven}\n     */\n    uninstall: function() {\n        TraceKit.report.uninstall();\n\n        this._restoreBuiltIns();\n\n        Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n        this._isRavenInstalled = false;\n\n        return this;\n    },\n\n    /*\n     * Manually capture an exception and send it over to Sentry\n     *\n     * @param {error} ex An exception to be logged\n     * @param {object} options A specific set of options for this error [optional]\n     * @return {Raven}\n     */\n    captureException: function(ex, options) {\n        // If not an Error is passed through, recall as a message instead\n        if (!isError(ex)) return this.captureMessage(ex, options);\n\n        // Store the raw exception object for potential debugging and introspection\n        this._lastCapturedException = ex;\n\n        // TraceKit.report will re-raise any exception passed to it,\n        // which means you have to wrap it in try/catch. Instead, we\n        // can wrap it here and only re-raise if TraceKit.report\n        // raises an exception different from the one we asked to\n        // report on.\n        try {\n            var stack = TraceKit.computeStackTrace(ex);\n            this._handleStackInfo(stack, options);\n        } catch(ex1) {\n            if(ex !== ex1) {\n                throw ex1;\n            }\n        }\n\n        return this;\n    },\n\n    /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n    captureMessage: function(msg, options) {\n        // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n        // early call; we'll error on the side of logging anything called before configuration since it's\n        // probably something you should see:\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(msg)) {\n            return;\n        }\n\n        // Fire away!\n        this._send(\n            objectMerge({\n                message: msg + ''  // Make sure it's actually a string\n            }, options)\n        );\n\n        return this;\n    },\n\n    addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n        var pluginArgs = Array.prototype.slice.call(arguments, 1);\n\n        this._plugins.push([plugin, pluginArgs]);\n        if (this._isRavenInstalled) {\n            this._drainPlugins();\n        }\n\n        return this;\n    },\n\n    /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n    setUserContext: function(user) {\n        // Intentionally do not merge here since that's an unexpected behavior.\n        this._globalContext.user = user;\n\n        return this;\n    },\n\n    /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n    setExtraContext: function(extra) {\n        this._mergeContext('extra', extra);\n\n        return this;\n    },\n\n    /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n    setTagsContext: function(tags) {\n        this._mergeContext('tags', tags);\n\n        return this;\n    },\n\n    /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n    clearContext: function() {\n        this._globalContext = {};\n\n        return this;\n    },\n\n    /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n    getContext: function() {\n        // lol javascript\n        return JSON.parse(JSON.stringify(this._globalContext));\n    },\n\n    /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n    setRelease: function(release) {\n        this._globalOptions.release = release;\n\n        return this;\n    },\n\n    /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n    setDataCallback: function(callback) {\n        this._globalOptions.dataCallback = callback;\n\n        return this;\n    },\n\n    /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n    setShouldSendCallback: function(callback) {\n        this._globalOptions.shouldSendCallback = callback;\n\n        return this;\n    },\n\n    /**\n     * Override the default HTTP transport mechanism that transmits data\n     * to the Sentry server.\n     *\n     * @param {function} transport Function invoked instead of the default\n     *                             `makeRequest` handler.\n     *\n     * @return {Raven}\n     */\n    setTransport: function(transport) {\n        this._globalOptions.transport = transport;\n\n        return this;\n    },\n\n    /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n    lastException: function() {\n        return this._lastCapturedException;\n    },\n\n    /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n    lastEventId: function() {\n        return this._lastEventId;\n    },\n\n    /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n    isSetup: function() {\n        if (!this._hasJSON) return false;  // needs JSON support\n        if (!this._globalServer) {\n            if (!this.ravenNotConfiguredError) {\n              this.ravenNotConfiguredError = true;\n              this._logDebug('error', 'Error: Raven has not been configured.');\n            }\n            return false;\n        }\n        return true;\n    },\n\n    afterLoad: function () {\n        // TODO: remove window dependence?\n\n        // Attempt to initialize Raven on load\n        var RavenConfig = window.RavenConfig;\n        if (RavenConfig) {\n            this.config(RavenConfig.dsn, RavenConfig.config).install();\n        }\n    },\n\n    showReportDialog: function (options) {\n        if (!window.document) // doesn't work without a document (React native)\n            return;\n\n        options = options || {};\n\n        var lastEventId = options.eventId || this.lastEventId();\n        if (!lastEventId) {\n            throw new RavenConfigError('Missing eventId');\n        }\n\n        var dsn = options.dsn || this._dsn;\n        if (!dsn) {\n            throw new RavenConfigError('Missing DSN');\n        }\n\n        var encode = encodeURIComponent;\n        var qs = '';\n        qs += '?eventId=' + encode(lastEventId);\n        qs += '&dsn=' + encode(dsn);\n\n        var user = options.user || this._globalContext.user;\n        if (user) {\n            if (user.name)  qs += '&name=' + encode(user.name);\n            if (user.email) qs += '&email=' + encode(user.email);\n        }\n\n        var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = globalServer + '/api/embed/error-page/' + qs;\n        (document.head || document.body).appendChild(script);\n    },\n\n    /**** Private functions ****/\n    _ignoreNextOnError: function () {\n        var self = this;\n        this._ignoreOnError += 1;\n        setTimeout(function () {\n            // onerror should trigger before setTimeout\n            self._ignoreOnError -= 1;\n        });\n    },\n\n    _triggerEvent: function(eventType, options) {\n        // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n        var evt, key;\n\n        if (!this._hasDocument)\n            return;\n\n        options = options || {};\n\n        eventType = 'raven' + eventType.substr(0,1).toUpperCase() + eventType.substr(1);\n\n        if (document.createEvent) {\n            evt = document.createEvent('HTMLEvents');\n            evt.initEvent(eventType, true, true);\n        } else {\n            evt = document.createEventObject();\n            evt.eventType = eventType;\n        }\n\n        for (key in options) if (hasKey(options, key)) {\n            evt[key] = options[key];\n        }\n\n        if (document.createEvent) {\n            // IE9 if standards\n            document.dispatchEvent(evt);\n        } else {\n            // IE8 regardless of Quirks or Standards\n            // IE9 if quirks\n            try {\n                document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n            } catch(e) {\n                // Do nothing\n            }\n        }\n    },\n\n    /**\n     * Install any queued plugins\n     */\n    _wrapBuiltIns: function() {\n        var self = this;\n\n        function fill(obj, name, replacement, noUndo) {\n            var orig = obj[name];\n            obj[name] = replacement(orig);\n            if (!noUndo) {\n                self._wrappedBuiltIns.push([obj, name, orig]);\n            }\n        }\n\n        function wrapTimeFn(orig) {\n            return function (fn, t) { // preserve arity\n                // Make a copy of the arguments\n                var args = [].slice.call(arguments);\n                var originalCallback = args[0];\n                if (isFunction(originalCallback)) {\n                    args[0] = self.wrap(originalCallback);\n                }\n\n                // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n                // also supports only two arguments and doesn't care what this is, so we\n                // can just call the original function directly.\n                if (orig.apply) {\n                    return orig.apply(this, args);\n                } else {\n                    return orig(args[0], args[1]);\n                }\n            };\n        }\n\n        fill(window, 'setTimeout', wrapTimeFn);\n        fill(window, 'setInterval', wrapTimeFn);\n        if (window.requestAnimationFrame) {\n            fill(window, 'requestAnimationFrame', function (orig) {\n                return function (cb) {\n                    return orig(self.wrap(cb));\n                };\n            });\n        }\n\n        // event targets borrowed from bugsnag-js:\n        // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n        'EventTarget Window Node ApplicationCache AudioTrackList ChannelMergerNode CryptoOperation EventSource FileReader HTMLUnknownElement IDBDatabase IDBRequest IDBTransaction KeyOperation MediaController MessagePort ModalWindow Notification SVGElementInstance Screen TextTrack TextTrackCue TextTrackList WebSocket WebSocketWorker Worker XMLHttpRequest XMLHttpRequestEventTarget XMLHttpRequestUpload'.replace(/\\w+/g, function (global) {\n            var proto = window[global] && window[global].prototype;\n            if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n                fill(proto, 'addEventListener', function(orig) {\n                    return function (evt, fn, capture, secure) { // preserve arity\n                        try {\n                            if (fn && fn.handleEvent) {\n                                fn.handleEvent = self.wrap(fn.handleEvent);\n                            }\n                        } catch (err) {\n                            // can sometimes get 'Permission denied to access property \"handle Event'\n                        }\n                        return orig.call(this, evt, self.wrap(fn), capture, secure);\n                    };\n                });\n                fill(proto, 'removeEventListener', function (orig) {\n                    return function (evt, fn, capture, secure) {\n                        fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__  : fn);\n                        return orig.call(this, evt, fn, capture, secure);\n                    };\n                });\n            }\n        });\n\n        if ('XMLHttpRequest' in window) {\n            fill(XMLHttpRequest.prototype, 'send', function(origSend) {\n                return function (data) { // preserve arity\n                    var xhr = this;\n                    'onreadystatechange onload onerror onprogress'.replace(/\\w+/g, function (prop) {\n                        if (prop in xhr && Object.prototype.toString.call(xhr[prop]) === '[object Function]') {\n                            fill(xhr, prop, function (orig) {\n                                return self.wrap(orig);\n                            }, true /* noUndo */); // don't track filled methods on XHR instances\n                        }\n                    });\n                    return origSend.apply(this, arguments);\n                };\n            });\n        }\n\n        var $ = window.jQuery || window.$;\n        if ($ && $.fn && $.fn.ready) {\n            fill($.fn, 'ready', function (orig) {\n                return function (fn) {\n                    return orig.call(this, self.wrap(fn));\n                };\n            });\n        }\n    },\n\n    _restoreBuiltIns: function () {\n        // restore any wrapped builtins\n        var builtin;\n        while (this._wrappedBuiltIns.length) {\n            builtin = this._wrappedBuiltIns.shift();\n\n            var obj = builtin[0],\n              name = builtin[1],\n              orig = builtin[2];\n\n            obj[name] = orig;\n        }\n    },\n\n    _drainPlugins: function() {\n        var self = this;\n\n        // FIX ME TODO\n        each(this._plugins, function(_, plugin) {\n            var installer = plugin[0];\n            var args = plugin[1];\n            installer.apply(self, [self].concat(args));\n        });\n    },\n\n    _parseDSN: function(str) {\n        var m = dsnPattern.exec(str),\n            dsn = {},\n            i = 7;\n\n        try {\n            while (i--) dsn[dsnKeys[i]] = m[i] || '';\n        } catch(e) {\n            throw new RavenConfigError('Invalid DSN: ' + str);\n        }\n\n        if (dsn.pass && !this._globalOptions.allowSecretKey) {\n            throw new RavenConfigError('Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key');\n        }\n\n        return dsn;\n    },\n\n    _getGlobalServer: function(uri) {\n        // assemble the endpoint from the uri pieces\n        var globalServer = '//' + uri.host +\n            (uri.port ? ':' + uri.port : '');\n\n        if (uri.protocol) {\n            globalServer = uri.protocol + ':' + globalServer;\n        }\n        return globalServer;\n    },\n\n    _handleOnErrorStackInfo: function() {\n        // if we are intentionally ignoring errors via onerror, bail out\n        if (!this._ignoreOnError) {\n            this._handleStackInfo.apply(this, arguments);\n        }\n    },\n\n    _handleStackInfo: function(stackInfo, options) {\n        var self = this;\n        var frames = [];\n\n        if (stackInfo.stack && stackInfo.stack.length) {\n            each(stackInfo.stack, function(i, stack) {\n                var frame = self._normalizeFrame(stack);\n                if (frame) {\n                    frames.push(frame);\n                }\n            });\n        }\n\n        this._triggerEvent('handle', {\n            stackInfo: stackInfo,\n            options: options\n        });\n\n        this._processException(\n            stackInfo.name,\n            stackInfo.message,\n            stackInfo.url,\n            stackInfo.lineno,\n            frames.slice(0, this._globalOptions.stackTraceLimit),\n            options\n        );\n    },\n\n    _normalizeFrame: function(frame) {\n        if (!frame.url) return;\n\n        // normalize the frames data\n        var normalized = {\n            filename:   frame.url,\n            lineno:     frame.line,\n            colno:      frame.column,\n            'function': frame.func || '?'\n        }, context = this._extractContextFromFrame(frame), i;\n\n        if (context) {\n            var keys = ['pre_context', 'context_line', 'post_context'];\n            i = 3;\n            while (i--) normalized[keys[i]] = context[i];\n        }\n\n        normalized.in_app = !( // determine if an exception came from outside of our app\n            // first we check the global includePaths list.\n            !!this._globalOptions.includePaths.test && !this._globalOptions.includePaths.test(normalized.filename) ||\n            // Now we check for fun, if the function name is Raven or TraceKit\n            /(Raven|TraceKit)\\./.test(normalized['function']) ||\n            // finally, we do a last ditch effort and check for raven.min.js\n            /raven\\.(min\\.)?js$/.test(normalized.filename)\n        );\n\n        return normalized;\n    },\n\n    _extractContextFromFrame: function(frame) {\n        // immediately check if we should even attempt to parse a context\n        if (!frame.context || !this._globalOptions.fetchContext) return;\n\n        var context = frame.context,\n            pivot = ~~(context.length / 2),\n            i = context.length, isMinified = false;\n\n        while (i--) {\n            // We're making a guess to see if the source is minified or not.\n            // To do that, we make the assumption if *any* of the lines passed\n            // in are greater than 300 characters long, we bail.\n            // Sentry will see that there isn't a context\n            if (context[i].length > 300) {\n                isMinified = true;\n                break;\n            }\n        }\n\n        if (isMinified) {\n            // The source is minified and we don't know which column. Fuck it.\n            if (isUndefined(frame.column)) return;\n\n            // If the source is minified and has a frame column\n            // we take a chunk of the offending line to hopefully shed some light\n            return [\n                [],  // no pre_context\n                context[pivot].substr(frame.column, 50), // grab 50 characters, starting at the offending column\n                []   // no post_context\n            ];\n        }\n\n        return [\n            context.slice(0, pivot),    // pre_context\n            context[pivot],             // context_line\n            context.slice(pivot + 1)    // post_context\n        ];\n    },\n\n    _processException: function(type, message, fileurl, lineno, frames, options) {\n        var stacktrace, fullMessage;\n\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(message)) return;\n\n        message += '';\n        message = truncate(message, this._globalOptions.maxMessageLength);\n\n        fullMessage = (type ? type + ': ' : '') + message;\n        fullMessage = truncate(fullMessage, this._globalOptions.maxMessageLength);\n\n        if (frames && frames.length) {\n            fileurl = frames[0].filename || fileurl;\n            // Sentry expects frames oldest to newest\n            // and JS sends them as newest to oldest\n            frames.reverse();\n            stacktrace = {frames: frames};\n        } else if (fileurl) {\n            stacktrace = {\n                frames: [{\n                    filename: fileurl,\n                    lineno: lineno,\n                    in_app: true\n                }]\n            };\n        }\n\n        if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) return;\n        if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) return;\n\n        var data = objectMerge({\n            // sentry.interfaces.Exception\n            exception: {\n                values: [{\n                    type: type,\n                    value: message,\n                    stacktrace: stacktrace\n                }]\n            },\n            culprit: fileurl,\n            message: fullMessage\n        }, options);\n\n        // Fire away!\n        this._send(data);\n    },\n\n    _trimPacket: function(data) {\n        // For now, we only want to truncate the two different messages\n        // but this could/should be expanded to just trim everything\n        var max = this._globalOptions.maxMessageLength;\n        data.message = truncate(data.message, max);\n        if (data.exception) {\n            var exception = data.exception.values[0];\n            exception.value = truncate(exception.value, max);\n        }\n\n        return data;\n    },\n\n    _getHttpData: function() {\n        if (!this._hasDocument || !document.location || !document.location.href) {\n            return;\n        }\n\n        var httpData = {\n            headers: {\n                'User-Agent': navigator.userAgent\n            }\n        };\n\n        httpData.url = document.location.href;\n\n        if (document.referrer) {\n            httpData.headers.Referer = document.referrer;\n        }\n\n        return httpData;\n    },\n\n\n    _send: function(data) {\n        var self = this;\n\n        var globalOptions = this._globalOptions;\n\n        var baseData = {\n            project: this._globalProject,\n            logger: globalOptions.logger,\n            platform: 'javascript'\n        }, httpData = this._getHttpData();\n\n        if (httpData) {\n            baseData.request = httpData;\n        }\n\n        data = objectMerge(baseData, data);\n\n        // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n        data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n        data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n        // Send along our own collected metadata with extra\n        data.extra['session:duration'] = now() - this._startTime;\n\n        // If there are no tags/extra, strip the key from the payload alltogther.\n        if (isEmptyObject(data.tags)) delete data.tags;\n\n        if (this._globalContext.user) {\n            // sentry.interfaces.User\n            data.user = this._globalContext.user;\n        }\n\n        // Include the release if it's defined in globalOptions\n        if (globalOptions.release) data.release = globalOptions.release;\n\n        // Include server_name if it's defined in globalOptions\n        if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n        if (isFunction(globalOptions.dataCallback)) {\n            data = globalOptions.dataCallback(data) || data;\n        }\n\n        // Why??????????\n        if (!data || isEmptyObject(data)) {\n            return;\n        }\n\n        // Check if the request should be filtered or not\n        if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {\n            return;\n        }\n\n        // Send along an event_id if not explicitly passed.\n        // This event_id can be used to reference the error within Sentry itself.\n        // Set lastEventId after we know the error should actually be sent\n        this._lastEventId = data.event_id || (data.event_id = uuid4());\n\n        // Try and clean up the packet before sending by truncating long values\n        data = this._trimPacket(data);\n\n        this._logDebug('debug', 'Raven about to send:', data);\n\n        if (!this.isSetup()) return;\n\n        var auth = {\n            sentry_version: '7',\n            sentry_client: 'raven-js/' + this.VERSION,\n            sentry_key: this._globalKey\n        };\n        if (this._globalSecret) {\n            auth.sentry_secret = this._globalSecret;\n        }\n\n        var url = this._globalEndpoint;\n        (globalOptions.transport || this._makeRequest).call(this, {\n            url: url,\n            auth: auth,\n            data: data,\n            options: globalOptions,\n            onSuccess: function success() {\n                self._triggerEvent('success', {\n                    data: data,\n                    src: url\n                });\n            },\n            onError: function failure() {\n                self._triggerEvent('failure', {\n                    data: data,\n                    src: url\n                });\n            }\n        });\n    },\n\n    _makeImageRequest: function(opts) {\n        // Tack on sentry_data to auth options, which get urlencoded\n        opts.auth.sentry_data = JSON.stringify(opts.data);\n\n        var img = this._newImage(),\n            src = opts.url + '?' + urlencode(opts.auth),\n            crossOrigin = opts.options.crossOrigin;\n\n        if (crossOrigin || crossOrigin === '') {\n            img.crossOrigin = crossOrigin;\n        }\n        img.onload = opts.onSuccess;\n        img.onerror = img.onabort = opts.onError;\n        img.src = src;\n    },\n\n    _makeXhrRequest: function(opts) {\n        var request;\n\n        var url = opts.url;\n        function handler() {\n            if (request.status === 200) {\n                if (opts.onSuccess) {\n                    opts.onSuccess();\n                }\n            } else if (opts.onError) {\n                opts.onError();\n            }\n        }\n\n        request = new XMLHttpRequest();\n        if ('withCredentials' in request) {\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                handler();\n            };\n        } else {\n            request = new XDomainRequest();\n            // xdomainrequest cannot go http -> https (or vice versa),\n            // so always use protocol relative\n            url = url.replace(/^https?:/, '');\n\n            // onreadystatechange not supported by XDomainRequest\n            request.onload = handler;\n        }\n\n        // NOTE: auth is intentionally sent as part of query string (NOT as custom\n        //       HTTP header) so as to avoid preflight CORS requests\n        request.open('POST', url + '?' + urlencode(opts.auth));\n        request.send(JSON.stringify(opts.data));\n    },\n\n    _makeRequest: function(opts) {\n        var hasCORS =\n            'withCredentials' in new XMLHttpRequest() ||\n            typeof XDomainRequest !== 'undefined';\n\n        return (hasCORS ? this._makeXhrRequest : this._makeImageRequest)(opts);\n    },\n\n    // Note: this is shitty, but I can't figure out how to get\n    // sinon to stub document.createElement without breaking everything\n    // so this wrapper is just so I can stub it for tests.\n    _newImage: function() {\n        return document.createElement('img');\n    },\n\n    _logDebug: function(level) {\n        if (this._originalConsoleMethods[level] && this.debug) {\n            // In IE<10 console methods do not have their own 'apply' method\n            Function.prototype.apply.call(\n                this._originalConsoleMethods[level],\n                this._originalConsole,\n                [].slice.call(arguments, 1)\n            );\n        }\n    },\n\n    _mergeContext: function(key, context) {\n        if (isUndefined(context)) {\n            delete this._globalContext[key];\n        } else {\n            this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n        }\n    }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n",
    "/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\n'use strict';\n\nvar RavenConstructor = require('./raven');\n\nvar _Raven = window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function () {\n\twindow.Raven = _Raven;\n\treturn Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n",
    "'use strict';\n\nvar objectPrototype = Object.prototype;\n\nfunction isUndefined(what) {\n    return what === void 0;\n}\n\nfunction isFunction(what) {\n    return typeof what === 'function';\n}\n\nfunction isString(what) {\n    return objectPrototype.toString.call(what) === '[object String]';\n}\n\nfunction isObject(what) {\n    return typeof what === 'object' && what !== null;\n}\n\nfunction isEmptyObject(what) {\n    for (var _ in what) return false;  // eslint-disable-line guard-for-in, no-unused-vars\n    return true;\n}\n\n// Sorta yanked from https://github.com/joyent/node/blob/aa3b4b4/lib/util.js#L560\n// with some tiny modifications\nfunction isError(what) {\n    var toString = objectPrototype.toString.call(what);\n    return isObject(what) &&\n        toString === '[object Error]' ||\n        toString === '[object Exception]' || // Firefox NS_ERROR_FAILURE Exceptions\n        what instanceof Error;\n}\n\nfunction each(obj, callback) {\n    var i, j;\n\n    if (isUndefined(obj.length)) {\n        for (i in obj) {\n            if (hasKey(obj, i)) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    } else {\n        j = obj.length;\n        if (j) {\n            for (i = 0; i < j; i++) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    }\n}\n\nfunction objectMerge(obj1, obj2) {\n    if (!obj2) {\n        return obj1;\n    }\n    each(obj2, function(key, value){\n        obj1[key] = value;\n    });\n    return obj1;\n}\n\nfunction truncate(str, max) {\n    return !max || str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n    return objectPrototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n    // Combine an array of regular expressions and strings into one large regexp\n    // Be mad.\n    var sources = [],\n        i = 0, len = patterns.length,\n        pattern;\n\n    for (; i < len; i++) {\n        pattern = patterns[i];\n        if (isString(pattern)) {\n            // If it's a string, we need to escape it\n            // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n            sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n        } else if (pattern && pattern.source) {\n            // If it's a regexp already, we want to extract the source\n            sources.push(pattern.source);\n        }\n        // Intentionally skip other cases\n    }\n    return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n    var pairs = [];\n    each(o, function(key, value) {\n        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    });\n    return pairs.join('&');\n}\n\nfunction uuid4() {\n    var crypto = window.crypto || window.msCrypto;\n\n    if (!isUndefined(crypto) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n\n        // set 4 in byte 7\n        arr[3] = arr[3] & 0xFFF | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        arr[4] = arr[4] & 0x3FFF | 0x8000;\n\n        var pad = function(num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = '0' + v;\n            }\n            return v;\n        };\n\n        return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) +\n        pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n    } else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0,\n                v = c === 'x' ? r : r&0x3|0x8;\n            return v.toString(16);\n        });\n    }\n}\n\nmodule.exports = {\n    isUndefined: isUndefined,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isEmptyObject: isEmptyObject,\n    isError: isError,\n    each: each,\n    objectMerge: objectMerge,\n    truncate: truncate,\n    hasKey: hasKey,\n    joinRegExp: joinRegExp,\n    urlencode: urlencode,\n    uuid4: uuid4\n};\n",
    "'use strict';\n\nvar utils = require('../../src/utils');\n\nvar hasKey = utils.hasKey;\nvar isString = utils.isString;\nvar isUndefined = utils.isUndefined;\n\n/*\n TraceKit - Cross brower stack traces - github.com/occ/TraceKit\n MIT license\n*/\n\nvar TraceKit = {\n    remoteFetching: false,\n    collectWindowErrors: true,\n    // 3 lines before, the offending line, 3 lines after\n    linesOfContext: 7,\n    debug: false\n};\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:Uncaught )?((?:Eval|Internal|Range|Reference|Syntax|Type|URI)Error)\\: ?(.*)$/;\n\nfunction getLocationHref() {\n    if (typeof document === 'undefined')\n        return '';\n\n    return document.location.href;\n}\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastArgs = null,\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Remove all crash handlers.\n     */\n    function unsubscribeAll() {\n        uninstallGlobalHandler();\n        handlers = [];\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, isWindowError) {\n        var exception = null;\n        if (isWindowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (hasKey(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} colNo The column number at which the error\n     * occurred.\n     * @param {?Error} ex The actual Error object.\n     */\n    function traceKitWindowOnError(message, url, lineNo, colNo, ex) {\n        var stack = null;\n\n        if (lastExceptionStack) {\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n            processLastException();\n        } else if (ex) {\n            // New chrome and blink send along a real error object\n            // Let's just report that like a normal error.\n            // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n            stack = TraceKit.computeStackTrace(ex);\n            notifyHandlers(stack, true);\n        } else {\n            var location = {\n                'url': url,\n                'line': lineNo,\n                'column': colNo\n            };\n            location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\n            location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\n\n            var name = undefined;\n            var msg = message; // must be new var or will modify original `arguments`\n            var groups;\n            if (isString(message)) {\n                var groups = message.match(ERROR_TYPES_RE);\n                if (groups) {\n                    name = groups[1];\n                    msg = groups[2];\n                }\n            }\n\n            stack = {\n                'name': name,\n                'message': msg,\n                'url': getLocationHref(),\n                'stack': [location]\n            };\n            notifyHandlers(stack, true);\n        }\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler ()\n    {\n        if (_onErrorHandlerInstalled) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    function uninstallGlobalHandler ()\n    {\n        if (!_onErrorHandlerInstalled) {\n            return;\n        }\n        window.onerror = _oldOnerrorHandler;\n        _onErrorHandlerInstalled = false;\n        _oldOnerrorHandler = undefined;\n    }\n\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack,\n            _lastArgs = lastArgs;\n        lastArgs = null;\n        lastExceptionStack = null;\n        lastException = null;\n        notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @param {?boolean} rethrow If false, do not re-throw the exception.\n     * Only used for window.onerror to not cause an infinite loop of\n     * rethrowing.\n     */\n    function report(ex, rethrow) {\n        var args = _slice.call(arguments, 1);\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n              processLastException();\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        lastArgs = args;\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        if (rethrow !== false) {\n            throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n        }\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    report.uninstall = unsubscribeAll;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *   s.stack[i].context  - an array of source code lines; the middle element corresponds to the correct line#\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    var sourceCache = {};\n\n    /**\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\n     * to look up anonymous function names.\n     * @param {string} url URL of source code.\n     * @return {string} Source contents.\n     */\n    function loadSource(url) {\n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\n            return '';\n        }\n        try {\n            var getXHR = function() {\n                try {\n                    return new window.XMLHttpRequest();\n                } catch (e) {\n                    // explicitly bubble up the exception if not found\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\n                }\n            };\n\n            var request = getXHR();\n            request.open('GET', url, false);\n            request.send('');\n            return request.responseText;\n        } catch (e) {\n            return '';\n        }\n    }\n\n    /**\n     * Retrieves source code from the source code cache.\n     * @param {string} url URL of source code.\n     * @return {Array.<string>} Source contents.\n     */\n    function getSource(url) {\n        if (!isString(url)) return [];\n        if (!hasKey(sourceCache, url)) {\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\n            // cross-domain errors will be triggered.\n            var source = '';\n            var domain = '';\n            try { domain = document.domain; } catch (e) {}\n            if (url.indexOf(domain) !== -1) {\n                source = loadSource(url);\n            }\n            sourceCache[url] = source ? source.split('\\n') : [];\n        }\n\n        return sourceCache[url];\n    }\n\n    /**\n     * Tries to use an externally loaded copy of source code to determine\n     * the name of a function by looking at the name of the variable it was\n     * assigned to, if any.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} lineNo Line number in source code.\n     * @return {string} The function name, if discoverable.\n     */\n    function guessFunctionName(url, lineNo) {\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\n            line = '',\n            maxLines = 10,\n            source = getSource(url),\n            m;\n\n        if (!source.length) {\n            return UNKNOWN_FUNCTION;\n        }\n\n        // Walk backwards from the first line in the function until we find the line which\n        // matches the pattern above, which is the function definition\n        for (var i = 0; i < maxLines; ++i) {\n            line = source[lineNo - i] + line;\n\n            if (!isUndefined(line)) {\n                if ((m = reGuessFunction.exec(line))) {\n                    return m[1];\n                } else if ((m = reFunctionArgNames.exec(line))) {\n                    return m[1];\n                }\n            }\n        }\n\n        return UNKNOWN_FUNCTION;\n    }\n\n    /**\n     * Retrieves the surrounding lines from where an exception occurred.\n     * @param {string} url URL of source code.\n     * @param {(string|number)} line Line number in source code to centre\n     * around for context.\n     * @return {?Array.<string>} Lines of source code.\n     */\n    function gatherContext(url, line) {\n        var source = getSource(url);\n\n        if (!source.length) {\n            return null;\n        }\n\n        var context = [],\n            // linesBefore & linesAfter are inclusive with the offending line.\n            // if linesOfContext is even, there will be one extra line\n            //   *before* the offending line.\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\n            // Add one extra line if linesOfContext is odd\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\n            start = Math.max(0, line - linesBefore - 1),\n            end = Math.min(source.length, line + linesAfter - 1);\n\n        line -= 1; // convert to 0-based index\n\n        for (var i = start; i < end; ++i) {\n            if (!isUndefined(source[i])) {\n                context.push(source[i]);\n            }\n        }\n\n        return context.length > 0 ? context : null;\n    }\n\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    /**\n     * Determines where a code fragment occurs in the source code.\n     * @param {RegExp} re The function definition.\n     * @param {Array.<string>} urls A list of URLs to search.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceInUrls(re, urls) {\n        var source, m;\n        for (var i = 0, j = urls.length; i < j; ++i) {\n            // console.log('searching', urls[i]);\n            if ((source = getSource(urls[i])).length) {\n                source = source.join('\\n');\n                if ((m = re.exec(source))) {\n                    // console.log('Found function in ' + urls[i]);\n\n                    return {\n                        'url': urls[i],\n                        'line': source.substring(0, m.index).split('\\n').length,\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\n                    };\n                }\n            }\n        }\n\n        // console.log('no match');\n\n        return null;\n    }\n\n    /**\n     * Determines at which column a code fragment occurs on a line of the\n     * source code.\n     * @param {string} fragment The code fragment.\n     * @param {string} url The URL to search.\n     * @param {(string|number)} line The line number to examine.\n     * @return {?number} The column number.\n     */\n    function findSourceInLine(fragment, url, line) {\n        var source = getSource(url),\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\n            m;\n\n        line -= 1;\n\n        if (source && source.length > line && (m = re.exec(source[line]))) {\n            return m.index;\n        }\n\n        return null;\n    }\n\n    /**\n     * Determines where a function was defined within the source code.\n     * @param {(Function|string)} func A function reference or serialized\n     * function definition.\n     * @return {?Object.<string, (string|number)>} An object containing\n     * the url, line, and column number of the defined function.\n     */\n    function findSourceByFunctionBody(func) {\n        if (typeof document === 'undefined')\n            return;\n\n        var urls = [window.location.href],\n            scripts = document.getElementsByTagName('script'),\n            body,\n            code = '' + func,\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\n            re,\n            parts,\n            result;\n\n        for (var i = 0; i < scripts.length; ++i) {\n            var script = scripts[i];\n            if (script.src) {\n                urls.push(script.src);\n            }\n        }\n\n        if (!(parts = codeRE.exec(code))) {\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\n        }\n\n        // not sure if this is really necessary, but I don’t have a test\n        // corpus large enough to confirm that and it was in the original.\n        else {\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\n\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\n        }\n\n        // look for a normal function definition\n        if ((result = findSourceInUrls(re, urls))) {\n            return result;\n        }\n\n        // look for an old-school event handler function\n        if ((parts = eventRE.exec(code))) {\n            var event = parts[1];\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\n\n            // look for a function defined in HTML as an onXXX handler\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\n\n            if ((result = findSourceInUrls(re, urls[0]))) {\n                return result;\n            }\n\n            // look for ???\n            re = new RegExp(body);\n\n            if ((result = findSourceInUrls(re, urls))) {\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (isUndefined(ex.stack) || !ex.stack) return;\n\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|<anonymous>).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|https?|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') !== -1;\n                element = {\n                    'url': !isNative ? parts[2] : null,\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': isNative ? [parts[2]] : [],\n                    'line': parts[3] ? +parts[3] : null,\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ( parts = winjs.exec(lines[i]) ) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': [],\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : [],\n                    'line': parts[4] ? +parts[4] : null,\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = guessFunctionName(element.url, element.line);\n            }\n\n            if (element.line) {\n                element.context = gatherContext(element.url, element.line);\n            }\n\n            stack.push(element);\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        if (stack[0].line && !stack[0].column && reference) {\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\n        } else if (!stack[0].column && !isUndefined(ex.columnNumber)) {\n            // FireFox uses this awesome columnNumber property for its top frame\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n            // so adding 1\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n    }\n\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10 uses this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n        if (isUndefined(ex.stacktrace) || !ex.stacktrace) return;\n\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,\n          opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i,\n          lines = stacktrace.split('\\n'),\n          stack = [],\n          parts;\n\n        for (var line = 0; line < lines.length; line += 2) {\n            var element = null;\n            if ((parts = opera10Regex.exec(lines[line]))) {\n                element = {\n                    'url': parts[2],\n                    'line': +parts[1],\n                    'column': null,\n                    'func': parts[3],\n                    'args':[]\n                };\n            } else if ((parts = opera11Regex.exec(lines[line]))) {\n                element = {\n                    'url': parts[6],\n                    'line': +parts[1],\n                    'column': +parts[2],\n                    'func': parts[3] || parts[4],\n                    'args': parts[5] ? parts[5].split(',') : []\n                };\n            }\n\n            if (element) {\n                if (!element.func && element.line) {\n                    element.func = guessFunctionName(element.url, element.line);\n                }\n                if (element.line) {\n                    try {\n                        element.context = gatherContext(element.url, element.line);\n                    } catch (exc) {}\n                }\n\n                if (!element.context) {\n                    element.context = [lines[line + 1]];\n                }\n\n                stack.push(element);\n            }\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n    }\n\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack information.\n     */\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n            stack = [],\n            scripts = document.getElementsByTagName('script'),\n            inlineScriptBlocks = [],\n            parts;\n\n        for (var s in scripts) {\n            if (hasKey(scripts, s) && !scripts[s].src) {\n                inlineScriptBlocks.push(scripts[s]);\n            }\n        }\n\n        for (var line = 2; line < lines.length; line += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[line]))) {\n                item = {\n                    'url': parts[2],\n                    'func': parts[3],\n                    'args': [],\n                    'line': +parts[1],\n                    'column': null\n                };\n            } else if ((parts = lineRE2.exec(lines[line]))) {\n                item = {\n                    'url': parts[3],\n                    'func': parts[4],\n                    'args': [],\n                    'line': +parts[1],\n                    'column': null // TODO: Check to see if inline#1 (+parts[2]) points to the script number or column number.\n                };\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\n                var script = inlineScriptBlocks[parts[2] - 1];\n                if (script) {\n                    var source = getSource(item.url);\n                    if (source) {\n                        source = source.join('\\n');\n                        var pos = source.indexOf(script.innerText);\n                        if (pos >= 0) {\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\n                        }\n                    }\n                }\n            } else if ((parts = lineRE3.exec(lines[line]))) {\n                var url = window.location.href.replace(/#.*$/, '');\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[line + 1]));\n                var src = findSourceInUrls(re, [url]);\n                item = {\n                    'url': url,\n                    'func': '',\n                    'args': [],\n                    'line': src ? src.line : parts[1],\n                    'column': null\n                };\n            }\n\n            if (item) {\n                if (!item.func) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n                var context = gatherContext(item.url, item.line);\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\n                if (context && midline.replace(/^\\s*/, '') === lines[line + 1].replace(/^\\s*/, '')) {\n                    item.context = context;\n                } else {\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                    item.context = [lines[line + 1]];\n                }\n                stack.push(item);\n            }\n        }\n\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n\n        return {\n            'name': ex.name,\n            'message': lines[0],\n            'url': getLocationHref(),\n            'stack': stack\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = guessFunctionName(initial.url, initial.line);\n            }\n\n            if (!initial.context) {\n                initial.context = gatherContext(initial.url, initial.line);\n            }\n\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'));\n              } catch (e) { }\n            }\n\n            if ((source = findSourceByFunctionBody(curr))) {\n                item.url = source.url;\n                item.line = source.line;\n\n                if (item.func === UNKNOWN_FUNCTION) {\n                    item.func = guessFunctionName(item.url, item.line);\n                }\n\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\n                if (reference) {\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\n                }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref()\n        };\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\n    computeStackTrace.guessFunctionName = guessFunctionName;\n    computeStackTrace.gatherContext = gatherContext;\n\n    return computeStackTrace;\n}());\n\nmodule.exports = TraceKit;\n",
    "'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n",
    "(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n",
    "'use strict';\n\nvar settings = require('./settings');\nvar TabState = require('./tab-state');\n\n// Cache the tab state constants.\nvar states = TabState.states;\n\n// Each button state has two icons one for normal resolution (19) and one\n// for hi-res screens (38).\nvar icons = {};\nicons[states.ACTIVE] = {\n  19: 'images/browser-icon-active.png',\n  38: 'images/browser-icon-active@2x.png',\n};\nicons[states.INACTIVE] = {\n  19: 'images/browser-icon-inactive.png',\n  38: 'images/browser-icon-inactive@2x.png',\n};\n\nvar buildType = settings.buildType;\n\n// themes to apply to the toolbar icon badge depending on the type of\n// build. Production builds use the default color and no text\nvar badgeThemes = {\n  'dev': {\n    defaultText: 'DEV',\n    color: '#5BCF59', // Emerald green\n  },\n  'staging': {\n    defaultText: 'STG',\n    color: '#EDA061', // Porche orange-pink\n  },\n};\n\n// Fake localization function.\nfunction _(str) {\n  return str;\n}\n\n/* Controls the display of the browser action button setting the icon, title\n * and badges depending on the current state of the tab.\n *\n * BrowserAction is responsible for mapping the logical H state of\n * a tab (whether the extension is active, annotation count) to\n * the badge state.\n */\nfunction BrowserAction(chromeBrowserAction) {\n  /**\n   * Updates the state of the browser action to reflect the logical\n   * H state of a tab.\n   *\n   * @param state - The H state of a tab. See the 'tab-state' module.\n   */\n  this.update = function(tabId, state) {\n    var activeIcon = icons[states.INACTIVE];\n    var title = '';\n    var badgeText = '';\n\n    if (state.state === states.ACTIVE) {\n      activeIcon = icons[states.ACTIVE];\n      title = 'Hypothesis is active';\n    } else if (state.state === states.INACTIVE) {\n      title = 'Hypothesis is inactive';\n    } else if (state.state === states.ERRORED) {\n      title = 'Hypothesis failed to load';\n      badgeText = '!';\n    } else {\n      throw new Error('Unknown tab state');\n    }\n\n    // display the annotation count on the badge\n    if (state.state !== states.ERRORED && state.annotationCount) {\n      var countLabel;\n      var totalString = state.annotationCount.toString();\n      if (state.annotationCount > 999) {\n        totalString = '999+';\n      }\n      if (state.annotationCount === 1) {\n        countLabel = _(\"There's 1 annotation on this page\");\n      } else {\n        countLabel = _('There are ' + totalString + ' annotations on ' +\n                  'this page');\n      }\n      title = countLabel;\n      badgeText = totalString;\n    }\n\n    // update the badge style to reflect the build type\n    var badgeTheme = badgeThemes[buildType];\n    if (badgeTheme) {\n      chromeBrowserAction.setBadgeBackgroundColor({\n        tabId: tabId,\n        color: badgeTheme.color,\n      });\n      if (!badgeText) {\n        badgeText = badgeTheme.defaultText;\n      }\n    }\n\n    chromeBrowserAction.setBadgeText({tabId: tabId, text: badgeText});\n    chromeBrowserAction.setIcon({tabId: tabId, path: activeIcon});\n    chromeBrowserAction.setTitle({tabId: tabId, title: title});\n  };\n}\n\nBrowserAction.icons = icons;\n\nmodule.exports = BrowserAction;\n",
    "'use strict';\n\n/**\n * Returns the name of the current browser.\n *\n * @return {'chrome'|'firefox'}\n */\nfunction browserName() {\n  if (window.browser) {\n    return 'firefox';\n  } else {\n    return 'chrome';\n  }\n}\n\nmodule.exports = browserName;\n",
    "'use strict';\n\n/**\n * Returns the type of content in the current document,\n * currently either 'PDF' or 'HTML'.\n *\n * This function is injected as a content script into tabs in\n * order to detect the type of content on the page (PDF, HTML) etc.\n * by sniffing for viewer plugins.\n *\n * In future this could also be extended to support extraction of the URLs\n * of content in embedded viewers where that differs from the tab's\n * main URL.\n */\nfunction detectContentType(document_) {\n  document_ = document_ || document;\n\n  function detectChromePDFViewer() {\n    // When viewing a PDF in Chrome, the viewer consists of a top-level\n    // document with an <embed> tag, which in turn instantiates an inner HTML\n    // document providing the PDF viewer UI plus another <embed> tag which\n    // instantiates the native PDF renderer.\n    //\n    // The selector below matches the <embed> tag in the top-level document. To\n    // see this document, open the inspector on a PDF viewer tab with\n    // Ctrl+Shift+I rather than right-clicking on the viewport and selecting the\n    // 'Inspect' option which will instead show the _inner_ document.\n    if (document_.querySelector('embed[type=\"application/pdf\"][name=\"plugin\"]')) {\n      return {type: 'PDF'};\n    }\n    return null;\n  }\n\n  function detectFirefoxPDFViewer() {\n    // The Firefox PDF viewer is an instance of PDF.js.\n    //\n    // The Firefox PDF plugin specifically can be detected via the <base>\n    // tag it includes, which can be done from a content script (which runs\n    // in an isolated JS world from the page's own scripts).\n    //\n    // Generic PDF.js detection can be done by looking for the\n    // `window.PDFViewerApplication` object. This however requires running JS\n    // code in the same JS context as the page's own code.\n    if (document_.baseURI.indexOf('resource://pdf.js') === 0) {\n      return {type: 'PDF'};\n    }\n    return null;\n  }\n\n  var detectFns = [detectChromePDFViewer, detectFirefoxPDFViewer];\n  for (var i = 0; i < detectFns.length; i++) {\n    var typeInfo = detectFns[i]();\n    if (typeInfo) {\n      return typeInfo;\n    }\n  }\n\n  return {type: 'HTML'};\n}\n\nmodule.exports = detectContentType;\n",
    "'use strict';\n\n/**\n * @typedef {Object} Query\n * @property [string] id\n * @property [string] query\n */\n\n/**\n * Extracts a direct-linked annotation ID or query from the fragment of a URL.\n *\n * @param {string} url - The URL which may contain a '#annotations:<ID>'\n *        or '#annotations:query:<query>' fragment.\n * @return {Query|null}\n */\nfunction directLinkQuery(url) {\n  // Annotation IDs are url-safe-base64 identifiers\n  // See https://tools.ietf.org/html/rfc4648#page-7\n  var idMatch = url.match(/#annotations:([A-Za-z0-9_-]+)$/);\n  if (idMatch) {\n    return { id: idMatch[1] };\n  }\n\n  var queryMatch = url.match(/#annotations:query:(.*)$/);\n  if (queryMatch) {\n    let query = decodeURIComponent(queryMatch[1]);\n    return { query };\n  }\n\n  return null;\n}\n\nmodule.exports = directLinkQuery;\n",
    "'use strict';\n\nvar raven = require('./raven');\n\nfunction ExtensionError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\nExtensionError.prototype = Object.create(Error.prototype);\n\nfunction LocalFileError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\nLocalFileError.prototype = Object.create(ExtensionError.prototype);\n\nfunction NoFileAccessError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\nNoFileAccessError.prototype = Object.create(ExtensionError.prototype);\n\nfunction RestrictedProtocolError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\nRestrictedProtocolError.prototype = Object.create(ExtensionError.prototype);\n\nfunction BlockedSiteError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\nBlockedSiteError.prototype = Object.create(ExtensionError.prototype);\n\nfunction AlreadyInjectedError(message) {\n  Error.apply(this, arguments);\n  this.message = message;\n}\nAlreadyInjectedError.prototype = Object.create(ExtensionError.prototype);\n\n/**\n * Returns true if `err` is a recognized 'expected' error.\n */\nfunction isKnownError(err) {\n  return err instanceof ExtensionError;\n}\n\nvar IGNORED_ERRORS = [\n  // Errors that can happen when the tab is closed during injection\n  /The tab was closed/,\n  /No tab with id.*/,\n  // Attempts to access pages for which Chrome does not allow scripting\n  /Cannot access contents of.*/,\n  /The extensions gallery cannot be scripted/,\n];\n\n/**\n * Returns true if a given `err` is anticipated during sidebar injection, such\n * as the tab being closed by the user, and should not be reported to Sentry.\n *\n * @param {{message: string}} err - The Error-like object\n */\nfunction shouldIgnoreInjectionError(err) {\n  if (IGNORED_ERRORS.some(function (pattern) {\n    return err.message.match(pattern);\n  })) {\n    return true;\n  }\n  if (isKnownError(err)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Report an error.\n *\n * All errors are logged to the console. Additionally unexpected errors,\n * ie. those which are not instances of ExtensionError, are reported to\n * Sentry.\n *\n * @param {Error} error - The error which happened.\n * @param {string} when - Describes the context in which the error occurred.\n * @param {Object} context - Additional context for the error.\n */\nfunction report(error, when, context) {\n  console.error(when, error);\n  if (!isKnownError(error)) {\n    raven.report(error, when, context);\n  }\n}\n\nmodule.exports = {\n  ExtensionError: ExtensionError,\n  AlreadyInjectedError: AlreadyInjectedError,\n  LocalFileError: LocalFileError,\n  NoFileAccessError: NoFileAccessError,\n  RestrictedProtocolError: RestrictedProtocolError,\n  BlockedSiteError: BlockedSiteError,\n  report: report,\n  shouldIgnoreInjectionError: shouldIgnoreInjectionError,\n};\n",
    "'use strict';\n\nvar raven = require('./raven');\n\nif (window.EXTENSION_CONFIG.raven) {\n  raven.init(window.EXTENSION_CONFIG.raven);\n}\n\nrequire('./polyfills');\nrequire('./hypothesis-chrome-extension');\nrequire('./install');\n",
    "'use strict';\n\nvar browserName = require('./browser-name');\nvar errors = require('./errors');\n\n/* A controller for displaying help pages. These are bound to extension\n * specific errors (found in errors.js) but can also be triggered manually.\n *\n * chromeTabs   - An instance of chrome.tabs.\n * extensionURL - A function that recieves a path and returns a full path\n *   to the file inside the chrome extension. See:\n *   https://developer.chrome.com/extensions/extension#method-getURL\n */\nfunction HelpPage(chromeTabs, extensionURL, browserName_) {\n  browserName_ = browserName_ || browserName;\n\n  /* Accepts an instance of errors.ExtensionError and displays an appropriate\n   * help page if one exists.\n   *\n   * @param {Tab} tab   - The tab to display the error message in.\n   * @param {Error} error - The error to display, usually an instance of\n   *                        errors.ExtensionError\n   */\n  this.showHelpForError = function (tab, error) {\n    if (error instanceof errors.LocalFileError) {\n      return this.showLocalFileHelpPage(tab);\n    }\n    else if (error instanceof errors.NoFileAccessError) {\n      return this.showNoFileAccessHelpPage(tab);\n    }\n    else if (error instanceof errors.RestrictedProtocolError) {\n      return this.showRestrictedProtocolPage(tab);\n    }\n    else if (error instanceof errors.BlockedSiteError) {\n      return this.showBlockedSitePage(tab);\n    }\n    else {\n      return this.showOtherErrorPage(tab, error);\n    }\n  };\n\n  this.showLocalFileHelpPage = showHelpPage.bind(null, 'local-file');\n  this.showNoFileAccessHelpPage = showHelpPage.bind(null, 'no-file-access');\n  this.showRestrictedProtocolPage = showHelpPage.bind(null, 'restricted-protocol');\n  this.showBlockedSitePage = showHelpPage.bind(null, 'blocked-site');\n  this.showOtherErrorPage = showHelpPage.bind(null, 'other-error');\n\n  /**\n   * Open a tab displaying the help page.\n   *\n   * @param {string} helpSection - ID of a <section> within the help page.\n   * @param {tabs.Tab} tab - The tab where the error occurred.\n   * @param {Error} error - The error which prompted the help page.\n   */\n  function showHelpPage(helpSection, tab, error) {\n    var params = '';\n    if (error) {\n      params = '?message=' + encodeURIComponent(error.message);\n    }\n\n    var tabOpts = {\n      index: tab.index + 1,\n      url:  extensionURL('/help/index.html' + params + '#' + helpSection),\n    };\n\n    // Add `openerTabId` property to associate the help page tab with the\n    // current tab. This property is not supported in Firefox.\n    if (browserName_() !== 'firefox') {\n      tabOpts.openerTabId = tab.id;\n    }\n\n    chromeTabs.create(tabOpts);\n  }\n}\n\nmodule.exports = HelpPage;\n",
    "'use strict';\n\nvar BrowserAction = require('./browser-action');\nvar HelpPage = require('./help-page');\nvar SidebarInjector = require('./sidebar-injector');\nvar TabState = require('./tab-state');\nvar TabStore = require('./tab-store');\nvar directLinkQuery = require('./direct-link-query');\nvar errors = require('./errors');\nvar settings = require('./settings');\n\nvar TAB_STATUS_LOADING = 'loading';\nvar TAB_STATUS_COMPLETE = 'complete';\n\n/* The main extension application. This wires together all the smaller\n * modules. The app listens to all new created/updated/removed tab events\n * and uses the TabState object to keep track of whether the sidebar is\n * active or inactive in the tab. The app also listens to click events on\n * the browser action and toggles the state and uses the BrowserAction module\n * to update the visual style of the button.\n *\n * The SidebarInjector handles the insertion of the Hypothesis code. If it\n * runs into errors the tab is put into an errored state and when the\n * browser action is clicked again the HelpPage module displays more\n * information to the user.\n *\n * Lastly the TabStore listens to changes to the TabState module and persists\n * the current settings to localStorage. This is then loaded into the\n * application on startup.\n *\n * Relevant Chrome Extension documentation:\n * - https://developer.chrome.com/extensions/browserAction\n * - https://developer.chrome.com/extensions/tabs\n * - https://developer.chrome.com/extensions/extension\n *\n * dependencies - An object to set up the application.\n *   chromeTabs: An instance of chrome.tabs.\n *   chromeBrowserAction: An instance of chrome.browserAction.\n *   extensionURL: chrome.extension.getURL.\n *   isAllowedFileSchemeAccess: chrome.extension.isAllowedFileSchemeAccess.\n */\nfunction HypothesisChromeExtension(dependencies) {\n  var chromeTabs = dependencies.chromeTabs;\n  var chromeExtension = dependencies.chromeExtension;\n  var chromeStorage = dependencies.chromeStorage;\n  var chromeBrowserAction = dependencies.chromeBrowserAction;\n  var help  = new HelpPage(chromeTabs, dependencies.extensionURL);\n  var store = new TabStore(localStorage);\n  var state = new TabState(store.all(), onTabStateChange);\n  var browserAction = new BrowserAction(chromeBrowserAction);\n  var sidebar = new SidebarInjector(chromeTabs, {\n    extensionURL: dependencies.extensionURL,\n    isAllowedFileSchemeAccess: dependencies.isAllowedFileSchemeAccess,\n  });\n\n  restoreSavedTabState();\n\n  /* Sets up the extension and binds event listeners. Requires a window\n   * object to be passed so that it can listen for localStorage events.\n   */\n  this.listen = function () {\n    chromeBrowserAction.onClicked.addListener(onBrowserActionClicked);\n    chromeTabs.onCreated.addListener(onTabCreated);\n\n    // when a user navigates within an existing tab,\n    // onUpdated is fired in most cases\n    chromeTabs.onUpdated.addListener(onTabUpdated);\n\n    // ... but when a user navigates to a page that is loaded\n    // via prerendering or instant results, onTabReplaced is\n    // fired instead. See https://developer.chrome.com/extensions/tabs#event-onReplaced\n    // and https://code.google.com/p/chromium/issues/detail?id=109557\n    chromeTabs.onReplaced.addListener(onTabReplaced);\n\n    chromeTabs.onRemoved.addListener(onTabRemoved);\n  };\n\n  /* A method that can be used to setup the extension on existing tabs\n   * when the extension is re-installed.\n   */\n  this.install = function () {\n    restoreSavedTabState();\n  };\n\n  /* Opens the onboarding page */\n  this.firstRun = function (extensionInfo) {\n    // If we've been installed because of an administrative policy, then don't\n    // open the welcome page in a new tab.\n    //\n    // It's safe to assume that if an admin policy is responsible for installing\n    // the extension, opening the welcome page is going to do more harm than\n    // good, as it will appear that a tab opened without user action.\n    //\n    // See:\n    //\n    //   https://developer.chrome.com/extensions/management#type-ExtensionInstallType\n    //\n    if (extensionInfo.installType === 'admin') {\n      return;\n    }\n\n    chromeTabs.create({url: settings.serviceUrl + 'welcome'}, function (tab) {\n      state.activateTab(tab.id);\n    });\n  };\n\n  function restoreSavedTabState() {\n    store.reload();\n    state.load(store.all());\n    chromeTabs.query({}, function (tabs) {\n      tabs.forEach(function (tab) {\n        onTabStateChange(tab.id, state.getState(tab.id));\n      });\n    });\n  }\n\n  function onTabStateChange(tabId, current) {\n    if (current) {\n      browserAction.update(tabId, current);\n      chromeTabs.get(tabId, updateTabDocument);\n\n      if (!state.isTabErrored(tabId)) {\n        store.set(tabId, current);\n      }\n    } else {\n      store.unset(tabId);\n    }\n  }\n\n  // exposed for use by tests\n  this._onTabStateChange = onTabStateChange;\n\n  function onBrowserActionClicked(tab) {\n    var tabError = state.getState(tab.id).error;\n    if (tabError) {\n      help.showHelpForError(tab, tabError);\n    }\n    else if (state.isTabActive(tab.id)) {\n      state.deactivateTab(tab.id);\n    }\n    else {\n      state.activateTab(tab.id);\n    }\n  }\n\n  /**\n   * Returns the active state for a tab\n   * which has just been navigated to.\n   */\n  function activeStateForNavigatedTab(tabId) {\n    var activeState = state.getState(tabId).state;\n    if (activeState === TabState.states.ERRORED) {\n      // user had tried to activate H on the previous page but it failed,\n      // retry on the new page\n      activeState = TabState.states.ACTIVE;\n    }\n    return activeState;\n  }\n\n  function resetTabState(tabId, url) {\n    state.setState(tabId, {\n      state: activeStateForNavigatedTab(tabId),\n      ready: false,\n      annotationCount: 0,\n      extensionSidebarInstalled: false,\n    });\n    updateAnnotationCountIfEnabled(tabId, url);\n  }\n\n  // This function will be called multiple times as the tab reloads.\n  // https://developer.chrome.com/extensions/tabs#event-onUpdated\n  //\n  // 'changeInfo' contains details of what changed about the tab's status.\n  // Two important events are when the tab's `status` changes to `loading`\n  // when the user begins a new navigation and when the tab's status changes\n  // to `complete` after the user completes a navigation\n  function onTabUpdated(tabId, changeInfo, tab) {\n    if (changeInfo.status === TAB_STATUS_LOADING) {\n      resetTabState(tabId, tab.url);\n      var query = directLinkQuery(tab.url);\n      if (query) {\n        state.setState(tab.id, { directLinkQuery: query });\n      }\n    } else if (changeInfo.status === TAB_STATUS_COMPLETE) {\n      var tabState = state.getState(tabId);\n      var newActiveState = tabState.state;\n      if (tabState.directLinkQuery) {\n        newActiveState = TabState.states.ACTIVE;\n      }\n      state.setState(tabId, {\n        ready: true,\n        state: newActiveState,\n      });\n    }\n  }\n\n  function onTabReplaced(addedTabId, removedTabId) {\n    state.setState(addedTabId, {\n      state: activeStateForNavigatedTab(removedTabId),\n      ready: true,\n    });\n    state.clearTab(removedTabId);\n\n    chromeTabs.get(addedTabId, function (tab) {\n      updateAnnotationCountIfEnabled(addedTabId, tab.url);\n    });\n  }\n\n  function onTabCreated(tab) {\n    // Clear the state in case there is old, conflicting data in storage.\n    state.clearTab(tab.id);\n  }\n\n  function onTabRemoved(tabId) {\n    state.clearTab(tabId);\n  }\n\n  // installs or uninstalls the sidebar from a tab when the H\n  // state for a tab changes\n  function updateTabDocument(tab) {\n    // If the tab has not yet finished loading then just quietly return.\n    if (!state.getState(tab.id).ready) {\n      return Promise.resolve();\n    }\n\n    var isInstalled = state.getState(tab.id).extensionSidebarInstalled;\n    if (state.isTabActive(tab.id) && !isInstalled) {\n      // optimistically set the state flag indicating that the sidebar\n      // has been installed\n      state.setState(tab.id, {\n        extensionSidebarInstalled: true,\n      });\n\n      var { directLinkQuery } = state.getState(tab.id);\n\n      var config = {\n        // Configure client to load assets and sidebar app from extension.\n        // Note: Even though the sidebar app URL is correct here and the page\n        // does load, Chrome devtools may incorrectly report that it failed to\n        // load. See https://bugs.chromium.org/p/chromium/issues/detail?id=667533\n        assetRoot: chromeExtension.getURL('/client/'),\n        sidebarAppUrl: chromeExtension.getURL('/client/app.html'),\n      };\n\n      if (directLinkQuery) {\n        if (directLinkQuery.id) {\n          config.annotations = directLinkQuery.id;\n        }\n        if (directLinkQuery.query) {\n          config.query = directLinkQuery.query;\n        }\n      }\n\n      return sidebar.injectIntoTab(tab, config)\n        .then(function () {\n          // Clear the direct link once H has been successfully injected\n          state.setState(tab.id, { directLinkQuery: undefined });\n        })\n        .catch(function (err) {\n          if (err instanceof errors.AlreadyInjectedError) {\n            state.setState(tab.id, {\n              state: TabState.states.INACTIVE,\n              extensionSidebarInstalled: false,\n            });\n            return;\n          }\n          if (!errors.shouldIgnoreInjectionError(err)) {\n            errors.report(err, 'Injecting Hypothesis sidebar', {\n              url: tab.url,\n            });\n          }\n          state.errorTab(tab.id, err);\n        });\n    } else if (state.isTabInactive(tab.id) && isInstalled) {\n      return sidebar.removeFromTab(tab).then(function () {\n        state.setState(tab.id, {\n          extensionSidebarInstalled: false,\n        });\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  function updateAnnotationCountIfEnabled(tabId, url) {\n    if (!chromeStorage.sync) {\n      // Firefox < 53 does not support `chrome.storage.sync`.\n      state.updateAnnotationCount(tabId, url);\n      return;\n    }\n\n    chromeStorage.sync.get({\n      badge: true,\n    }, function (items) {\n      if (items.badge) {\n        state.updateAnnotationCount(tabId, url);\n      }\n    });\n  }\n}\n\nmodule.exports = HypothesisChromeExtension;\n",
    "'use strict';\n\nvar HypothesisChromeExtension = require('./hypothesis-chrome-extension');\nvar settings = require('./settings');\n\nvar browserExtension = new HypothesisChromeExtension({\n  chromeExtension: chrome.extension,\n  chromeTabs: chrome.tabs,\n  chromeBrowserAction: chrome.browserAction,\n  chromeStorage: chrome.storage,\n  extensionURL: function (path) {\n    return chrome.extension.getURL(path);\n  },\n  isAllowedFileSchemeAccess: function (fn) {\n    return chrome.extension.isAllowedFileSchemeAccess(fn);\n  },\n});\n\nbrowserExtension.listen(window);\n\nif (chrome.runtime.onInstalled) {\n  chrome.runtime.onInstalled.addListener(onInstalled);\n}\n\n// Respond to messages sent by the JavaScript from https://hyp.is.\n// This is how it knows whether the user has this Chrome extension installed.\nif (chrome.runtime.onMessageExternal) {\n  chrome.runtime.onMessageExternal.addListener(\n    function (request, sender, sendResponse) {\n      if (request.type === 'ping') {\n        sendResponse({type: 'pong'});\n      }\n    }\n  );\n}\n\nif (chrome.runtime.requestUpdateCheck) {\n  chrome.runtime.requestUpdateCheck(function () {\n    chrome.runtime.onUpdateAvailable.addListener(onUpdateAvailable);\n  });\n}\n\nfunction onInstalled(installDetails) {\n  // The install reason can be \"install\", \"update\", \"chrome_update\", or\n  // \"shared_module_update\", see:\n  //\n  //   https://developer.chrome.com/extensions/runtime#type-OnInstalledReason\n  //\n  // If we were installed (rather than updated) then trigger a \"firstRun\" event,\n  // passing in the details of the installed extension. See:\n  //\n  //   https://developer.chrome.com/extensions/management#method-getSelf\n  //\n  if (installDetails.reason === 'install') {\n    chrome.management.getSelf(browserExtension.firstRun);\n  }\n\n  // We need this so that 3rd party cookie blocking does not kill us.\n  // See https://github.com/hypothesis/h/issues/634 for more info.\n  // This is intended to be a temporary fix only.\n  var details = {\n    primaryPattern: settings.serviceUrl + '*',\n    setting: 'allow',\n  };\n  chrome.contentSettings.cookies.set(details);\n  chrome.contentSettings.images.set(details);\n  chrome.contentSettings.javascript.set(details);\n\n  browserExtension.install();\n}\n\nfunction onUpdateAvailable() {\n  chrome.runtime.reload();\n}\n",
    "'use strict';\n\n// Polyfills for APIs which are not present on all supported\n// versions of Chrome\n\n// ES2015+ polyfills\nrequire('core-js/fn/object/assign'); // Available: Chrome >= 45\nrequire('core-js/fn/object/values'); // Available: Chrome issue #4663\n\n// Polyfill for the fetch() API for Chrome < 42,\n// also used by our PhantomJS tests\nrequire('whatwg-fetch');\n",
    "'use strict';\n\n/**\n * This module configures Raven for reporting crashes\n * to Sentry.\n *\n * Logging requires the Sentry DSN and Hypothesis\n * version to be provided via the app's settings object.\n */\n\nvar Raven = require('raven-js');\n\n/**\n * Returns the input URL if it is an HTTP URL or the filename part of the URL\n * otherwise.\n *\n * @param {string} url - The script URL associated with an exception stack\n *                       frame.\n */\nfunction convertLocalURLsToFilenames(url) {\n  if (!url) {\n    return url;\n  }\n\n  if (url.match(/https?:/)) {\n    return url;\n  }\n\n  // Strip the query string (which is used as a cache buster)\n  // and extract the filename from the URL\n  return url.replace(/\\?.*/,'').split('/').slice(-1)[0];\n}\n\n/**\n * Return a transformed version of `data` with local URLs replaced\n * with filenames.\n *\n * In environments where the client is served from a local URL,\n * eg. chrome-extension://<ID>/scripts/bundle.js, the script URL\n * and the sourcemap it references will not be accessible to Sentry.\n *\n * Therefore on the client we replace references to such URLs with just\n * the filename part and then as part of the release process, upload both\n * the source file and the source map to Sentry.\n *\n * Using just the filename allows us to upload a single set of source files\n * and sourcemaps for a release though a given release of H might be served\n * from multiple actual URLs (eg. different browser extensions).\n */\nfunction translateSourceURLs(data) {\n  try {\n    var frames = data.exception.values[0].stacktrace.frames;\n    frames.forEach(function (frame) {\n      frame.filename = convertLocalURLsToFilenames(frame.filename);\n    });\n    data.culprit = frames[0].filename;\n  } catch (err) {\n    console.warn('Failed to normalize error stack trace', err, data);\n  }\n  return data;\n}\n\nfunction init(config) {\n  Raven.config(config.dsn, {\n    release: config.release,\n    dataCallback: translateSourceURLs,\n  }).install();\n  installUnhandledPromiseErrorHandler();\n}\n\n/**\n * Report an error to Sentry.\n *\n * @param {Error} error - An error object describing what went wrong\n * @param {string} when - A string describing the context in which\n *                        the error occurred.\n * @param {Object} [context] - A JSON-serializable object containing additional\n *                             information which may be useful when\n *                             investigating the error.\n */\nfunction report(error, when, context) {\n  if (!(error instanceof Error)) {\n    // If the passed object is not an Error, raven-js\n    // will serialize it using toString() which produces unhelpful results\n    // for objects that do not provide their own toString() implementations.\n    //\n    // If the error is a plain object or non-Error subclass with a message\n    // property, such as errors returned by chrome.extension.lastError,\n    // use that instead.\n    if (typeof error === 'object' && error.message) {\n      error = error.message;\n    }\n  }\n\n  var extra = Object.assign({ when: when }, context);\n  Raven.captureException(error, { extra: extra });\n}\n\n/**\n * Installs a handler to catch unhandled rejected promises.\n *\n * For this to work, the browser or the Promise polyfill must support\n * the unhandled promise rejection event (Chrome >= 49). On other browsers,\n * the rejections will simply go unnoticed. Therefore, app code _should_\n * always provide a .catch() handler on the top-most promise chain.\n *\n * See https://github.com/getsentry/raven-js/issues/424\n * and https://www.chromestatus.com/feature/4805872211460096\n *\n * It is possible that future versions of Raven JS may handle these events\n * automatically, in which case this code can simply be removed.\n */\nfunction installUnhandledPromiseErrorHandler() {\n  window.addEventListener('unhandledrejection', function (event) {\n    if (event.reason) {\n      report(event.reason, 'Unhandled Promise rejection');\n    }\n  });\n}\n\nmodule.exports = {\n  init: init,\n  report: report,\n};\n",
    "'use strict';\n\n/**\n * Validate and normalize the given settings data.\n *\n * @param {Object} settings The settings from the settings.json file.\n */\nfunction normalizeSettings(settings) {\n  // Make sure that apiUrl does not end with a /.\n  if (settings.apiUrl.charAt(settings.apiUrl.length - 1) === '/') {\n    settings.apiUrl = settings.apiUrl.slice(0, -1);\n  }\n  return settings;\n}\n\n/**\n * Returns the configuration object for the Chrome extension\n */\nmodule.exports = normalizeSettings(window.EXTENSION_CONFIG);\n",
    "'use strict';\n\nvar queryString = require('query-string');\n\nvar detectContentType = require('./detect-content-type');\nvar errors = require('./errors');\nvar util = require('./util');\n\nvar CONTENT_TYPE_HTML = 'HTML';\nvar CONTENT_TYPE_PDF = 'PDF';\n\nfunction toIIFEString(fn) {\n  return '(' + fn.toString() + ')()';\n}\n\n/**\n * Adds a <script> tag containing JSON config data to the page.\n *\n * Note that this function is stringified and injected into the page via a\n * content script, so it cannot reference any external variables.\n */\nfunction addJSONScriptTagFn(name, content) {\n  var scriptTag = document.createElement('script');\n  scriptTag.className = name;\n  scriptTag.textContent = content;\n  scriptTag.type = 'application/json';\n  document.head.appendChild(scriptTag);\n}\n\n/**\n * Extract the value returned by a content script injected via\n * chrome.tabs.executeScript() into the main frame of a page.\n *\n * executeScript() returns an array of results, one per frame which the script\n * was injected into.\n *\n * See https://developer.chrome.com/extensions/tabs#method-executeScript\n *\n * @param {Array<any>?} result\n */\nfunction extractContentScriptResult(result) {\n  if (Array.isArray(result) && result.length > 0) {\n    return result[0];\n  } else if (typeof result === 'object') {\n    // Firefox currently returns an object instead of\n    // an array from executeScript()\n    return result;\n  } else {\n    return null;\n  }\n}\n\n/* The SidebarInjector is used to deploy and remove the Hypothesis sidebar\n * from tabs. It also deals with loading PDF documents into the PDF.js viewer\n * when applicable.\n *\n * chromeTabs - An instance of chrome.tabs.\n * dependencies - An object with additional helper methods.\n *   isAllowedFileSchemeAccess: A function that returns true if the user\n *   can access resources over the file:// protocol. See:\n *   https://developer.chrome.com/extensions/extension#method-isAllowedFileSchemeAccess\n *   extensionURL: A function that receives a path and returns an absolute\n *   url. See: https://developer.chrome.com/extensions/extension#method-getURL\n */\nfunction SidebarInjector(chromeTabs, dependencies) {\n  dependencies = dependencies || {};\n\n  var isAllowedFileSchemeAccess = dependencies.isAllowedFileSchemeAccess;\n  var extensionURL = dependencies.extensionURL;\n\n  var executeScriptFn = util.promisify(chromeTabs.executeScript);\n\n  var PDFViewerBaseURL = extensionURL('/content/web/viewer.html');\n\n  if (typeof extensionURL !== 'function') {\n    throw new TypeError('extensionURL must be a function');\n  }\n\n  if (typeof isAllowedFileSchemeAccess !== 'function') {\n    throw new TypeError('isAllowedFileSchemeAccess must be a function');\n  }\n\n  /**\n   * Injects the Hypothesis sidebar into the tab provided.\n   *\n   * @param {Tab} tab - A tab object representing the tab to insert the sidebar\n   *        into.\n   * @param {Object?} config - An object containing configuration info that\n   *        is passed to the app when it loads.\n   *\n   * Returns a promise that will be resolved if the injection succeeded\n   * otherwise it will be rejected with an error.\n   */\n  this.injectIntoTab = function(tab, config) {\n    config = config || {};\n    if (isFileURL(tab.url)) {\n      return injectIntoLocalDocument(tab);\n    } else {\n      return injectIntoRemoteDocument(tab, config);\n    }\n  };\n\n  /* Removes the Hypothesis sidebar from the tab provided.\n   *\n   * tab - A tab object representing the tab to remove the sidebar from.\n   *\n   * Returns a promise that will be resolved if the removal succeeded\n   * otherwise it will be rejected with an error.\n   */\n  this.removeFromTab = function (tab) {\n    if (isPDFViewerURL(tab.url)) {\n      return removeFromPDF(tab);\n    } else {\n      return removeFromHTML(tab);\n    }\n  };\n\n  function getPDFViewerURL(url) {\n    // Encode the original URL but preserve the fragment, so that a\n    // '#annotations' fragment in the original URL will persist and trigger the\n    // sidebar to focus and scroll to that annotation when the PDF viewer loads.\n    var parsedURL = new URL(url);\n    var hash = parsedURL.hash;\n    parsedURL.hash = '';\n    var encodedURL = encodeURIComponent(parsedURL.href);\n    return PDFViewerBaseURL + '?file=' + encodedURL + hash;\n  }\n\n  // returns true if the extension is permitted to inject\n  // a content script into a tab with a given URL.\n  function canInjectScript(url) {\n    var canInject;\n    if (isSupportedURL(url)) {\n      canInject = Promise.resolve(true);\n    } else if (isFileURL(url)) {\n      canInject = util.promisify(isAllowedFileSchemeAccess)();\n    } else {\n      canInject = Promise.resolve(false);\n    }\n    return canInject;\n  }\n\n  /**\n   * Guess the content type of a page from the URL alone.\n   *\n   * This is a fallback for when it is not possible to inject\n   * a content script to determine the type of content in the page.\n   */\n  function guessContentTypeFromURL(url) {\n    if (url.indexOf('.pdf') !== -1) {\n      return CONTENT_TYPE_PDF;\n    } else {\n      return CONTENT_TYPE_HTML;\n    }\n  }\n\n  function detectTabContentType(tab) {\n    if (isPDFViewerURL(tab.url)) {\n      return Promise.resolve(CONTENT_TYPE_PDF);\n    }\n\n    return canInjectScript(tab.url).then(function (canInject) {\n      if (canInject) {\n        return executeScriptFn(tab.id, {\n          code: toIIFEString(detectContentType),\n        }).then(function (frameResults) {\n          var result = extractContentScriptResult(frameResults);\n          if (result) {\n            return result.type;\n          } else {\n              // If the content script threw an exception,\n              // frameResults may be null or undefined.\n              //\n              // In that case, fall back to guessing based on the\n              // tab URL\n            return guessContentTypeFromURL(tab.url);\n          }\n        });\n      } else {\n        // We cannot inject a content script in order to determine the\n        // file type, so fall back to a URL-based mechanism\n        return Promise.resolve(guessContentTypeFromURL(tab.url));\n      }\n    });\n  }\n\n  /**\n   * Returns true if a tab is displaying a PDF using the PDF.js-based\n   * viewer bundled with the extension.\n   */\n  function isPDFViewerURL(url) {\n    return url.indexOf(PDFViewerBaseURL) === 0;\n  }\n\n  function isFileURL(url) {\n    return url.indexOf('file:') === 0;\n  }\n\n  function isSupportedURL(url) {\n    // Injection of content scripts is limited to a small number of protocols,\n    // see https://developer.chrome.com/extensions/match_patterns\n    var parsedURL = new URL(url);\n    var SUPPORTED_PROTOCOLS = ['http:', 'https:', 'ftp:'];\n    return SUPPORTED_PROTOCOLS.some(function (protocol) {\n      return parsedURL.protocol === protocol;\n    });\n  }\n\n  function injectIntoLocalDocument(tab) {\n    return detectTabContentType(tab).then(function (type) {\n      if (type === CONTENT_TYPE_PDF) {\n        return injectIntoLocalPDF(tab);\n      } else {\n        return Promise.reject(new errors.LocalFileError('Local non-PDF files are not supported'));\n      }\n    });\n  }\n\n  function injectIntoRemoteDocument(tab, config) {\n    if (isPDFViewerURL(tab.url)) {\n      return Promise.resolve();\n    }\n\n    if (!isSupportedURL(tab.url)) {\n      // Chrome does not permit extensions to inject content scripts\n      // into (chrome*):// URLs and other custom schemes.\n      //\n      // A common case where this happens is when the user has an\n      // extension installed that provides a custom viewer for PDFs\n      // (or some other format). In some cases we could extract the original\n      // URL and open that in the Hypothesis viewer instead.\n      var protocol = tab.url.split(':')[0];\n      return Promise.reject(new errors.RestrictedProtocolError('Cannot load Hypothesis into ' + protocol + ' pages'));\n    }\n\n    return detectTabContentType(tab).then(function (type) {\n      if (type === CONTENT_TYPE_PDF) {\n        return injectIntoPDF(tab);\n      } else {\n        return injectConfig(tab.id, config).then(function () {\n          return injectIntoHTML(tab);\n        }).then(function (results) {\n          var result = extractContentScriptResult(results);\n          if (result &&\n              typeof result.installedURL === 'string' &&\n              result.installedURL.indexOf(extensionURL('/')) === -1) {\n            throw new errors.AlreadyInjectedError(\n              'Hypothesis is already injected into this page'\n            );\n          }\n        });\n      }\n    });\n  }\n\n  function injectIntoPDF(tab) {\n    if (isPDFViewerURL(tab.url)) {\n      return Promise.resolve();\n    }\n    var updateFn = util.promisify(chromeTabs.update);\n    return updateFn(tab.id, {url: getPDFViewerURL(tab.url)});\n  }\n\n  function injectIntoLocalPDF(tab) {\n    return new Promise(function (resolve, reject) {\n      isAllowedFileSchemeAccess(function (isAllowed) {\n        if (isAllowed) {\n          resolve(injectIntoPDF(tab));\n        } else {\n          reject(new errors.NoFileAccessError('Local file scheme access denied'));\n        }\n      });\n    });\n  }\n\n  function injectIntoHTML(tab) {\n    return injectScript(tab.id, '/client/build/boot.js');\n  }\n\n  function removeFromPDF(tab) {\n    return new Promise(function (resolve) {\n      var parsedURL = new URL(tab.url);\n      var originalURL = queryString.parse(parsedURL.search).file;\n      if (!originalURL) {\n        throw new Error('Failed to extract original URL from ' + tab.url);\n      }\n      var hash = parsedURL.hash;\n\n      // If the original URL was a direct link, drop the #annotations fragment\n      // as otherwise the Chrome extension will re-activate itself on this tab\n      // when the original URL loads.\n      if (hash.indexOf('#annotations:') === 0) {\n        hash = '';\n      }\n\n      chromeTabs.update(tab.id, {\n        url: decodeURIComponent(originalURL) + hash,\n      }, resolve);\n    });\n  }\n\n  function removeFromHTML(tab) {\n    if (!isSupportedURL(tab.url)) {\n      return Promise.resolve();\n    }\n    return injectScript(tab.id, '/lib/destroy.js');\n  }\n\n  /**\n   * Inject the script from the source file at `path` into the\n   * page currently loaded in the tab at the given ID.\n   */\n  function injectScript(tabId, path) {\n    return executeScriptFn(tabId, {file: path});\n  }\n\n  /**\n   * Inject configuration information for the Hypothesis application\n   * into the page as JSON data via a <meta> tag.\n   *\n   * A <meta> tag is used because that makes it available to JS content\n   * running in isolated worlds.\n   */\n  function injectConfig(tabId, config) {\n    var configStr = JSON.stringify(config).replace(/\"/g, '\\\\\"');\n    var configCode =\n      'var hypothesisConfig = \"' + configStr + '\";\\n' +\n      '(' + addJSONScriptTagFn.toString() + ')' +\n      '(\"js-hypothesis-config\", hypothesisConfig);\\n';\n    return executeScriptFn(tabId, {code: configCode});\n  }\n}\n\nmodule.exports = SidebarInjector;\n",
    "'use strict';\n\nvar isShallowEqual = require('is-equal-shallow');\n\nvar uriInfo = require('./uri-info');\n\nvar states = {\n  ACTIVE:   'active',\n  INACTIVE: 'inactive',\n  ERRORED:  'errored',\n};\n\n/** The default H state for a new browser tab */\nvar DEFAULT_STATE = {\n  /** Whether or not H is active on the page */\n  state: states.INACTIVE,\n  /** The count of annotations on the page visible to the user,\n   * as returned by the badge API\n   */\n  annotationCount: 0,\n  /** Whether or not the H sidebar has been installed onto the page by\n   * the extension\n   */\n  extensionSidebarInstalled: false,\n  /** Whether the tab is loaded and ready for the sidebar to be installed. */\n  ready: false,\n  /** The error for the current tab. */\n  error: undefined,\n};\n\n/** TabState stores the H state for a tab. This state includes:\n *\n * - Whether the extension has been activated on a tab\n * - Whether the sidebar is currently installed on a tab\n * - The count of annotations visible to the user on the URL currently\n *   displayed in the tab.\n *\n * The H state for a tab is updated via the setState() method and\n * retrieved via getState().\n *\n * When the H state for a tab changes, the `onchange()` callback will\n * be triggered with the tab ID and current and previous states.\n *\n * initialState - An Object of tabId/state keys. Used when loading state\n *   from a persisted store such as localStorage. This will be merged with\n *   the default state for a tab.\n * onchange     - A function that recieves onchange(tabId, current).\n */\nfunction TabState(initialState, onchange) {\n  var self = this;\n  var currentState;\n\n  this.onchange = onchange || null;\n\n  /** Replaces the H state for all tabs with the state data\n   * from `newState`.\n   *\n   * @param newState - A dictionary mapping tab ID to tab state objects.\n   *                   The provided state will be merged with the default\n   *                   state for a tab.\n   */\n  this.load = function (newState) {\n    var newCurrentState = {};\n    Object.keys(newState).forEach(function (tabId) {\n      newCurrentState[tabId] = Object.assign({}, DEFAULT_STATE, newState[tabId]);\n    });\n    currentState = newCurrentState;\n  };\n\n  this.activateTab = function (tabId) {\n    this.setState(tabId, {state: states.ACTIVE});\n  };\n\n  this.deactivateTab = function (tabId) {\n    this.setState(tabId, {state: states.INACTIVE});\n  };\n\n  this.errorTab = function (tabId, error) {\n    this.setState(tabId, {\n      state: states.ERRORED,\n      error: error,\n    });\n  };\n\n  this.clearTab = function (tabId) {\n    this.setState(tabId, null);\n  };\n\n  this.getState = function (tabId) {\n    if (!currentState[tabId]) {\n      return DEFAULT_STATE;\n    }\n    return currentState[tabId];\n  };\n\n  this.annotationCount = function(tabId) {\n    return this.getState(tabId).annotationCount;\n  };\n\n  this.isTabActive = function (tabId) {\n    return this.getState(tabId).state === states.ACTIVE;\n  };\n\n  this.isTabInactive = function (tabId) {\n    return this.getState(tabId).state === states.INACTIVE;\n  };\n\n  this.isTabErrored = function (tabId) {\n    return this.getState(tabId).state === states.ERRORED;\n  };\n\n  /**\n   * Updates the H state for a tab.\n   *\n   * @param tabId - The ID of the tab being updated\n   * @param stateUpdate - A dictionary of {key:value} properties for\n   *                      state properties to update or null if the\n   *                      state should be removed.\n   */\n  this.setState = function (tabId, stateUpdate) {\n    var newState;\n    if (stateUpdate) {\n      newState = Object.assign({}, this.getState(tabId), stateUpdate);\n      if (newState.state !== states.ERRORED) {\n        newState.error = undefined;\n      }\n    }\n\n    if (isShallowEqual(newState, currentState[tabId])) {\n      return;\n    }\n\n    currentState[tabId] = newState;\n\n    if (self.onchange) {\n      self.onchange(tabId, newState);\n    }\n  };\n\n  /**\n   * Query the server for the annotation count for a URL\n   * and update the annotation count for the tab accordingly.\n   *\n   * @method\n   * @param {integer} tabId The id of the tab.\n   * @param {string} tabUrl The URL of the tab.\n   */\n  this.updateAnnotationCount = function(tabId, tabUrl) {\n    var self = this;\n    return uriInfo.query(tabUrl).then(function (result) {\n      self.setState(tabId, { annotationCount: result.total });\n    }).catch(function (err) {\n      self.setState(tabId, { annotationCount: 0 });\n      console.error('Failed to fetch annotation count for %s: %s', tabUrl, err);\n    });\n  };\n\n  this.load(initialState || {});\n}\n\nTabState.states = states;\n\nmodule.exports = TabState;\n",
    "'use strict';\n\n/** TabStore is used to persist the state of H browser tabs when\n * the extension is re-installed or updated.\n *\n * Note: This could also be used to persist the state across browser sessions,\n * for that to work however the storage key would need to be changed.\n * The tab ID is currently used but this is valid only for a browser session.\n */\nfunction TabStore(storage) {\n  var key = 'state';\n  var local;\n\n  this.get = function (tabId) {\n    var value = local[tabId];\n    if (!value) {\n      throw new Error('TabStateStore could not find entry for tab: ' + tabId);\n    }\n    return value;\n  };\n\n  this.set = function (tabId, value) {\n    // copy across only the parts of the tab state that should\n    // be preserved\n    local[tabId] = {\n      state: value.state,\n      annotationCount: value.annotationCount,\n    };\n    storage.setItem(key, JSON.stringify(local));\n  };\n\n  this.unset = function (tabId) {\n    delete local[tabId];\n    storage.setItem(key, JSON.stringify(local));\n  };\n\n  this.all = function () {\n    return local;\n  };\n\n  this.reload = function () {\n    try {\n      local = {};\n      var loaded = JSON.parse(storage.getItem(key));\n      Object.keys(loaded).forEach(function (key) {\n        // ignore tab state saved by earlier versions of\n        // the extension which saved the state as a {key: <state string>}\n        // dict rather than {key: <state object>}\n        if (typeof loaded[key] === 'string') {\n          local[key] = {state: loaded[key]};\n        } else {\n          local[key] = loaded[key];\n        }\n      });\n    } catch (e) {\n      local = null;\n    }\n    local = local || {};\n  };\n\n  this.reload();\n}\n\nmodule.exports = TabStore;\n",
    "'use strict';\n\nvar settings = require('./settings');\n\n/** encodeUriQuery encodes a string for use in a query parameter */\nfunction encodeUriQuery(val) {\n  return encodeURIComponent(val).replace(/%20/g, '+');\n}\n\n/**\n * Queries the Hypothesis service that provides\n * statistics about the annotations for a given URL.\n */\nfunction query(uri) {\n  return fetch(settings.apiUrl + '/badge?uri=' + encodeUriQuery(uri),\n               {credentials: 'include'})\n    .then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (typeof data.total !== 'number') {\n        throw new Error('Annotation count is not a number');\n      }\n      return data;\n    });\n}\n\nmodule.exports = {\n  query: query,\n};\n",
    "'use strict';\n\nfunction getLastError() {\n  if (typeof chrome !== 'undefined' && chrome.extension) {\n    return chrome.extension.lastError;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Converts an async Chrome API into a function\n * which returns a promise.\n *\n * Usage:\n *   var apiFn = promisify(chrome.someModule.aFunction);\n *   apiFn(arg1, arg2)\n *     .then(function (result) { ...handle success  })\n *     .catch(function (err) { ...handle error })\n *\n *\n * @param fn A Chrome API function whose last argument is a callback\n *           which is invoked with the result of the query. When this callback\n *           is invoked, the promise is rejected if chrome.extension.lastError\n *           is set or resolved with the first argument to the callback otherwise.\n */\nfunction promisify(fn) {\n  return function () {\n    var args = [].slice.call(arguments);\n    var result = new Promise(function (resolve, reject) {\n      fn.apply(this, args.concat(function (result) {\n        var lastError = getLastError();\n        if (lastError) {\n          reject(lastError);\n        } else {\n          resolve(result);\n        }\n      }));\n    });\n    return result;\n  };\n}\n\nmodule.exports = {\n  promisify: promisify,\n};\n"
  ]
}